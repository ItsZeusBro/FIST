export const QUANTALITY_VIEW = `Quantality is evaluated right after positionality for an outgoing transaction which means it is only a single value that represents where from the start of positionality one wants to extend in the amount of data sent.\nQuantality represents the amount of data flowing from file a to file b.\nView.quan(tality) ACCEPTS end, mid, percentages (strings), +-*/ ops.\nExample: 1b, 2mb, 14gb, 0.5, 1b, 5%.\nView.quan(tality) RETURNS {tality:''}`
export const POSITIONALITY_VIEW = `Positionality is evaluated first!\nIt uses the entire file capacity to determine position.\nView.position(ality) ACCEPTS beg, end, mid (strings), percentages, +-*/ ops.\nExamples: 1b, 2mb, 14gb, etc. or 0.5, or 100b, or 5% or beg, end, beg+10b, mid-100mb, etc.\nView.position(ality) RETURNS {ality:''}`
export const CLUSIVITY_VIEW = `This is evaluated after positionality and quantality provide a begining and end anchor.\nWe can use beg, mid, and end to denote how much of the outgoing buffer should be shared with the original source.\nThis is a colon separated triplet.\nThe first element is the clusivity (in or ex), the second is beg or mid anchor expressions, the third is relative to the first in the way of a value, or can be anchored by end and used with expressions.\nView.clus(ivity) ACCEPTS beg, end, mid, percentage strings, +-*/ ops\nExample: 1b, 2mb, 14gb, etc. (prefixed with in or ex or just in or ex)\nin:position:offset or in:0.5, or in:1b, or in:end, in:mid, in:beg (for future?) ex:5%\nView.clus(ivity) RETURNS {ivity:'', n:'', m:''}`
