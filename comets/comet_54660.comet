

Quantality is evaluated right after positionality for an outgoing transaction
                which means it is only a single value that represents where from
                the start of positionality one wants to extend in the amount of data sent
             Quantality represents the amount of data flowing from file a to file b FistView.quan(tality) ACCEPTS end, mid, percentages (strings), +-*/ ops 
 Example: 1b, 2mb, 14gb, 0.5, 1b, 5% 
 FistView.quan(tality) RETURNS {tality:''} 

TypeError: Cannot read properties of null (reading '0')
    at file:///Users/hassan/Projects/GitHub/FIST/FistTest/FistViewT/FistViewT.js:51:78
    at Array.forEach (<anonymous>)
    at FistViewT.quantality (file:///Users/hassan/Projects/GitHub/FIST/FistTest/FistViewT/FistViewT.js:50:19)
    at FistViewT.run_tests (file:///Users/hassan/Projects/GitHub/FIST/FistTest/FistViewT/FistViewT.js:18:14)
    at new FistViewT (file:///Users/hassan/Projects/GitHub/FIST/FistTest/FistViewT/FistViewT.js:12:14)
    at FistTest.run_tests (file:///Users/hassan/Projects/GitHub/FIST/FistTest/FistTest.js:10:9)
    at file:///Users/hassan/Projects/GitHub/FIST/FistTest/FistTest.js:14:16
    at ModuleJob.run (node:internal/modules/esm/module_job:198:25)
    at async Promise.all (index 0)
    at async ESMLoader.import (node:internal/modules/esm/loader:385:24)
