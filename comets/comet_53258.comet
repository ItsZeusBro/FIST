sometest from FileView
Quantality is evaluated right after positionality for an outgoing transaction
                which means it is only a single value that represents where from
                the start of positionality one wants to extend in the amount of data sent
             Quantality represents the amount of data flowing from file a to file b FistView.quan(tality) ACCEPTS end, mid, percentages (strings), +-*/ ops 
 Example: 1b, 2mb, 14gb, 0.5, 1b, 5% 
 FistView.quan(tality) RETURNS {tality:''} 

This is evaluated after positionality and quantality provide a begining and end anchor
                we can use beg, mid, and end to denote how much of the outgoing buffer should be shared
                with the original source. This is a colon separated triplet. The first element is the
                clusivity (in or ex), the second is beg or mid anchor expressions, the third is relative
                to the first in the way of a value, or can be anchored by end and used with expressions
             FistView.clus(ivity) ACCEPTS beg, end, mid, percentage strings, +-*/ ops 
 Example: 1b, 2mb, 14gb, etc. (prefixed with in or ex or just in or ex) 
             in:position:offset or in:0.5, or in:1b, or in:end, in:mid, in:beg (for future?) 
             ex:5% 
 FistView.clus(ivity) RETURNS {ivity:'', n:'', m:''}
Positionality is evaluated first! It uses the entire file capacity to determine position FistView.position(ality) ACCEPTS beg, end, mid (strings), percentages, +-*/ ops 
 Examples: 1b, 2mb, 14gb, etc. or 0.5, or 100b, or 5% or beg, end, beg+10b, mid-100mb, etc FistView.position(ality) RETURNS {ality:''}
